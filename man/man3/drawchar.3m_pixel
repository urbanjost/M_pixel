." Text automatically generated by txt2man
.TH "drawchar" "3m_pixel" "August 22, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBdrawchar(3f) \fP- [M_pixel:TEXT] Draw a character at the current position
\fB(LICENSE:PD)
\fB
.SH SYNOPSIS
.nf
.fam C
definition:
.PP
.nf
.fam C
   subroutine drawchar(ch)
   character(len=1),intent(in) :: ch

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Draw a character at the current position. Uses current line color and thickness and text justification mode.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_drawchar
   use M_pixel
   use M_writegif_animated, only : write_animated_gif
   integer,parameter :: isize=600
   integer  :: movie(32:124,0:isize-1,0:isize-1)
   !! set up environment
   call prefsize(isize,isize)
   call vinit()
   call ortho2(-100.0,100.0,-100.0,100.0)
   call textsize(150.0,150.0)
   call centertext(.true.)

   do i=33,124
      !! draw reference circle and crosshairs
      call linewidth(100)
      call color(0)
      call clear()
      call color(4)
      call circle(0.0,0.0,75.0)
      call move2(-75.0,0.0)
      call draw2(75.0,0.0)
      call move2(0.0,-75.0)
      call draw2(0.0,75.0)
      call color(7)
      call linewidth(200)
      call textang(3.0*i)
      call move2(0.0,0.0)
      call drawchar(char(i))
      movie(i,:,:)=P_pixel
   enddo
   call vexit()
   !! write to file and display with display(1)
   call write_animated_gif('drawchar.3m_pixel.gif',movie,P_colormap)
   call execute_command_line('display drawchar.3m_pixel.gif')
   end program demo_drawchar

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
