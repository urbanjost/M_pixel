." Text automatically generated by txt2man
.TH "textang" "3m_pixel" "August 22, 2020" "" "" " "
." -----------------------------------------------------------------
." * set default formatting
." disable hyphenation
.nh
." disable justification (adjust text to left margin only)
.ad l
." -----------------------------------------------------------------
.SH NAME
\fBtextang(3f) \fP- [M_pixel:TEXT] set text angle
\fB(LICENSE:PD)
\fB
.SH SYNOPSIS
.nf
.fam C
definition:
.PP
.nf
.fam C
   subroutine textang(ang)
   real,intent(in) :: ang

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Set the text angle. This angles strings and chars. This routine only
affects software text.
.SH OPTIONS
.TP
.B ANG
The angle in degrees to draw text with when using \fBdrawstr\fP(3f).
Angles are measured counterclockwise with zero degrees at the horizontal
line to the right of the original.
.SH EXAMPLE
Sample program:
.PP
.nf
.fam C
   program demo_textang
   use :: M_pixel
   use :: M_pixel, only : cosd, sind
   use :: M_writegif, only : writegif
   !! set up drawing environment
   call prefsize(600,600)
   call vinit()
   call ortho2(-100.0,100.0,-100.0,100.0)
   call textsize(7.0,7.0)
   call linewidth(20)
   do i=1,30
      !! draw radial lines
      call color(1)
      call move2(0.0,0.0)
      call draw2(100.0*cosd(i*12),100.0*sind(i*12))
      !! draw rotated text
      call color(7)
      call move2(30.0*cosd(i*12),30.0*sind(i*12))
      call textang(i*12.0)
      call drawstr('angled text')
   enddo

   call writegif('textang.3m_pixel.gif',P_pixel,P_colormap)
   call execute_command_line('display textang.3m_pixel.gif')

   call vexit()

   end program demo_textang

.fam T
.fi
.SH AUTHOR
John S. Urban
.SH LICENSE
Public Domain
